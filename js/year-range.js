/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($) {
  Drupal.facets = Drupal.facets || {};
  Drupal.behaviors.facetsDateRange = {
    attach: function attach(context, settings) {
      var facetId = $(".facets-widget-year_range").find("ul").attr("data-drupal-facet-id");

      function toTimestamp(strDate) {
        var datum = Date.parse(strDate);
        return datum / 1000;
      }

      function isEmpty(val){
        return (val === undefined || val == null || val.length <= 0) ? true : false;
      }

      function refineSubmit() {
        var daterange = settings.facets.daterange[facetId];
        var alias = daterange.alias;
        var min = $('.facet-yearpicker-min').val();
        var max = $('.facet-yearpicker-max').val();
        // If its empty highlight the input
        if (isEmpty(min) && isEmpty(max)) {
          $('.facet-yearpicker-min').addClass("input-error");
          $('.facet-yearpicker-max').addClass("input-error");
          return;
        }
        if (isEmpty(max)) {
          max = min;
        }
        if (isEmpty(min)) {
          min = max;
        }
        var params = parseQueryString(window.location.search);
        var newParams = [];
        var existingDateQuery = false;
        // Update `alias` query in URL if previously queried
        for (var key in params) {
          // No search params in URL
          if (!params[key]) {
            break;
          }

          // Check for `alias` query
          if (params[key].startsWith(alias)) { 
            existingDateQuery = true;
            newParams.push(key + "=" + encodeURIComponent(alias + ":(min:" + min + ",max:" + max + ")"));
          }
          else {
            newParams.push(key + "=" + params[key]);
          }
        }
        var newSearch = newParams.join("&");
        // If no existing date query in url
        if (!existingDateQuery) {
          var daterangestr = daterange.url.replace(window.location.pathname, "");
          newSearch = "";
          daterangestr = daterangestr.replace("__year_range_min__", min).replace("__year_range_max__", max);
          newSearch += daterangestr;
        }

        // Redirect window to new Search URL
        window.location.search = newSearch; 
      }

      $('ul.item-list__year_range').addClass( "list-group list-group-horizontal" );

      $('.facet-yearpicker-submit').click(function () {
        refineSubmit();
      });

      // https://adevelopersnotes.wordpress.com/2013/04/11/parsing-a-query-string-into-an-array-with-javascript/
      var parseQueryString = function( queryString ) {
        var params = {}, queries, temp, i, l;

        // Split into key/value pairs
        queries = queryString.split("&");

        // Convert the array of strings into an object
        for ( i = 0, l = queries.length; i < l; i++ ) {
          temp = queries[i].split('=');
          params[temp[0]] = temp[1];
        }

        return params;
      };

      function checkDate(obj) {
        var minInput = $('.facet-yearpicker-min').val().trim();
        var maxInput = $('.facet-yearpicker-max').val().trim();
        var min = minInput === "" ? maxInput : minInput;
        var max = maxInput === "" ? minInput : maxInput;
        if (min === "" && max === "") {
          $('.facet-yearpicker-submit').prop('disabled', false);
          return;
        }
        min = parseInt(min);
        max = parseInt(max);
        // Check if min and max years are in proper closed range otherwise disable submit
        if (min > max) {
          $(obj).addClass("input-error");
          obj.setCustomValidity("The 'To' year must be bigger than 'From' year.");
          obj.reportValidity();
          $('.facet-yearpicker-submit').prop('disabled', true);
          return;
        }
        else {
          $('.facet-yearpicker-min').removeClass("input-error");
          $('.facet-yearpicker-max').removeClass("input-error");
          $('.facet-yearpicker-submit').prop('disabled', false);
        }
      }

      function validateInput() {
        // Get input
        var inputValue = this.value;
        if (!(/^\d+$/.test(inputValue))) {
          this.setCustomValidity("Input must be a valid year!");
          this.reportValidity();
          this.value = inputValue.replace(/\D/g, '');
          this.fixed = true;
          return;
        }
        // Ensure the replace doesn't reset the error message
        if (!this.fixed) {
          $('.facet-yearpicker-min').removeClass("input-error");
          $('.facet-yearpicker-max').removeClass("input-error");
          this.setCustomValidity("");
          this.fixed = false;
        }
        checkDate(this);
      }
      
      $('.facet-yearpicker-min').on('input', validateInput);
      $('.facet-yearpicker-max').on('input', validateInput);
    }
  };
})(jQuery);
